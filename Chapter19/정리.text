*JIT 컴파일러
자바에서 사용되는 개념.
Just-In-Time의 약자.
좀 더 쉬운 말로 하자면 동적 변환(dynamic translation)이다.
JIT라는 것을 만든 이유는 프로그램 실행을 보다 빠르게 하기 위해서다. 명칭이 컴파일러지만, 실행시에 적용되는 기술이다.

컴퓨터를 프로그램을 실행하는 방식은 두 가지로 나눌 수 있음.
1) Interpret 방식: 프로그램을 실행할 때 마다 컴퓨터가 알아 들을 수 있는 언어로 변환하는 작업을 수행
간편하긴 하지만 성능이 매우 느릴 수 밖에 없다.

2) static(정적) Compile 방식:
실행하기 전에 컴퓨터가 알아 들을 수 있는 언어로 변환하는 작업을 미리 실행
따라서 변환 작업은 딱 한 번만 수행한다.

JIT는 이 두 가지 방식을 혼합한 것이다.
javac라는 명령어를 사용하여 컴파일을 하는 단계에서 만들어진 class라는 파일은 bytecode일 뿐이다.
javac라는 명령어를 수행한다는 것은 텍스트로 만든 java 파일을 어떤 OS에서도 수행될 수 있도록 바이트 코드라는 파일로 만든 것 뿐.

커뮾터가 알아먹을 수 있도록 하려면 다시 변환 작업이 필요한테, 이 변환 작업을 JIT 컴파일러에서 한다고 보면 됨.
아래의 'JVM ---> 기계 코드'로 변환되는 부분을 JIT에서 수행하는 것이다.
JIT를 사용하면 반복적으로 수행되는 코드는 매우 빠른 성능을 보인다는 장점이 있지만, 
반대로 처음에 시작할 때엔 변환 단계를 거쳐야 하므로 성능이 느리다는 단점이 있다.


<자바 프로그램이 수행되는 절차>

자바 소스 코드			컴파일된 Bytecode		 	기계 코드
	------>		  ------>	    ------>      ------>	------> 하드웨어 및 OS
		[자바 컴파일러]			    [JVM]

* 자바를 배우면 꼭 알아야 하는 용어

JVM : Java Virtual Machine
GC : Garbage Collector

JVM은 작성한 자바 프로그램이 수행되는 프로세스를 의미함.
java라는 명령어를 통해서 애플리케이션이 수행되면, 이 JVM 위에서 애플리케이션이 동작한다.
이 JVM에서 작성한 프로그램을 찾고 실행하는 일련의 작업이 진행됨.

JVM은 메모리 관리를 스스로 수행함.
JVM 내에서 메모리 관리를 해주는 것을 Garbage Collector라고 부름.
