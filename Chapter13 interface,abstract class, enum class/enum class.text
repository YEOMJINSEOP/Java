* enum class

class라고 선언하는 부분에 enum이라고 선언하면 "이 객체는 상수의 집합이다"라는 것을 명시적으로 나타낸다.

<enum class 선언>

package c.enums;

public enum OverTimeValues {
	THREE_HOUR,
	FIVE_HOUR,
	WEEKEND_FOUR_HOUR,
	WEEKEND_EIGHT_HOUR;
}

<enum 클래스 사용>
1) switch 문에서 사용

package c.enums;

public class OverTimeManager{

	public int getOverTimeAmount(OverTimeValues value){
	
	int amount = 0;
	System.out.println(value);
	switch(value) {
		case THREE_HOUR:
			amount = 18000;
			break;

		case FIVE_HOUR:
			amount = 30000;
			break;

		case WEEKEND_FOUR_HOUR:
			amount = 40000;
			break;
		
		case WEEKEND_EIGHT_HOUR:
			amount = 60000;
			break;

		}
	return amount;
	}
}



그렇다면 getOverTimeAmount()메소드에 어떻게 OverTimeValues라는 enum 타입을 전달할까?

public static void main(String[] args){
	OverTimeManager manager = new OverTimeManager();
	int myAmount = manager.getOverTimeAmount(OverTimeValues.THREE_HOUR);
	System.out.println(myAmount);
}

가장 쉽게 이해하는 방법은 'enum 클래스 이름.상수이름'을 지정함으로써 클래스의 객체 생성이 완료된다고 생각하면 된다.

보통은 이와 같이 간단하게 별도의 변수를 생성하지 않고 사용하지만, 이해를 돕기 위해서 다음의 코드를 풀어서 쓰면 어떻게 구현되는지 보자.

int myAmount = manager.getOverTimeAmount(OverTimeValue.THREE_HOUR);

을 풀어쓰면

OverTimeValues value = OverTimeValues.THREE_HOUR;
int myAmount = manager.getOverTimeAmount(value);

이렇게 풀어쓸 수 있다.


--------------

<enum을 사용하는 다른 방법>


package c.enums;

public enum OverTimeValues2{

	THREE_HOUR(18000),
	FIVE_HOUR(30000),
	WEEKEND_FOUR_HOUR(40000),
	WEEKEND_EIGHT_HOUR(60000);

	private final int amount;

	OverTimeValues2(int amount){  //enum 생성자
		this.amount = amount;
	}

	public int getAmount(){
		return amount;
	}
}




앞 절의 예제와 다르게 각 상수들의 값이 지정돼있다.
enum 클래스도 생성자를 사용할 수는 있지만 package-private과 private만 접근 제어자로 사용할 수 있다.(public, protected를 생성자로 사용할 수 없다)
다시 말해, 각 상수를 enum 클래스 내에서 선언할 때만 이 생성자를 사용할 수 있다.
앞 절에서 사용한 enum 클래스는 일반 클래스와 마찬가지로, 컴파일 할 때 생성자를 자동으로 만들어 줬기 때문에 따로 생성자를 작성하지 않아도 작동한 것이다.

package c.enums;

public class OverTimeManager2{

	public static void main(String[] args){
		OverTimeValues2 value2 = OverTimeValues2.FIVE_HOUR;
		System.out.println(value2);
		System.out.println(value2.getAmout());
	}



}